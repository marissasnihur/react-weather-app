{"ast":null,"code":"var _jsxFileName = \"/Users/marissasnihur/Desktop/weather-in-the-universe-marissasnihur/react-weather-app/src/components/forecastItem/forecastItem.js\";\n\n/*\nThis is a 'functional component' that displays one entry of the forecast data:\nIcon, High Temperature, Low Temperature, and the day of week label (eg: Mon, Tue, Wed)\n\nIt will pull in and reuse the <Temperature> component we have already built. But we will override\nthe styling so it can fit inside the forecast list item block.\n\nWe will also associate the corresponding weather icon by building the correct CSS class name which\nmaps to \"weather-icons\" font and style as provided in the /public folder. For more information\nplease see http://erikflowers.github.io/weather-icons/\n\nAlthough this component pulls in multiple sources for its rendering task, it still qualifies as a\n'functional component' because it does not contain any internal states. It simply displays a bunch\nof data based on the props provided by its parent component\n*/\nimport React from 'react';\nimport Temperature from '../temperature/temperature';\nimport './forecastItem.scss';\nexport default (function (props) {\n  return React.createElement(\"li\", {\n    className: \"forecastItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"forecastIcon wi \".concat(props.icon),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Temperature, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.high), React.createElement(Temperature, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.low), React.createElement(\"p\", {\n    className: \"forecastDay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.dayOfWeek));\n});","map":{"version":3,"sources":["/Users/marissasnihur/Desktop/weather-in-the-universe-marissasnihur/react-weather-app/src/components/forecastItem/forecastItem.js"],"names":["React","Temperature","props","icon","high","low","dayOfWeek"],"mappings":";;AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAO,qBAAP;AAEA,gBAAe,UAACC,KAAD,EAAW;AACxB,SACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,4BAAqBA,KAAK,CAACC,IAA3B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,KAAK,CAACE,IAApB,CAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcF,KAAK,CAACG,GAApB,CAHF,EAIE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BH,KAAK,CAACI,SAAlC,CAJF,CADF;AAQD,CATD","sourcesContent":["/*\nThis is a 'functional component' that displays one entry of the forecast data:\nIcon, High Temperature, Low Temperature, and the day of week label (eg: Mon, Tue, Wed)\n\nIt will pull in and reuse the <Temperature> component we have already built. But we will override\nthe styling so it can fit inside the forecast list item block.\n\nWe will also associate the corresponding weather icon by building the correct CSS class name which\nmaps to \"weather-icons\" font and style as provided in the /public folder. For more information\nplease see http://erikflowers.github.io/weather-icons/\n\nAlthough this component pulls in multiple sources for its rendering task, it still qualifies as a\n'functional component' because it does not contain any internal states. It simply displays a bunch\nof data based on the props provided by its parent component\n*/\n\nimport React from 'react';\n\nimport Temperature from '../temperature/temperature';\n\nimport './forecastItem.scss';\n\nexport default (props) => {\n  return (\n    <li className='forecastItem'>\n      <span className={`forecastIcon wi ${props.icon}`}></span>\n      <Temperature>{props.high}</Temperature>\n      <Temperature>{props.low}</Temperature>\n      <p className='forecastDay'>{props.dayOfWeek}</p>\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}