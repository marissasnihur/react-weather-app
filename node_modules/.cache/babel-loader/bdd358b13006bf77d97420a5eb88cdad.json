{"ast":null,"code":"var _jsxFileName = \"/Users/marissasnihur/Desktop/weather-in-the-universe-marissasnihur/react-weather-app/src/containers/helpers/generateForecast.js\";\n\n/*\nThis function is responsible for generating an array of <ForecastItem>(s) as well as the\ncorresponding label for each day of the week.\n\nIt will loop through the forecast array, create an instance of <ForecastItem> with the data as props,\nand then return it back to the caller. \n\nBecause the next day is always going to be different, we will do a simple math calculation to\ndetermine which day label we should start the forecast with. (eg: If today is Saturday, then the\nforecast should say: Sun Mon Tue Wed Thu).\n*/\nimport React from 'react';\nimport ForecastItem from '../../components/forecastItem/forecastItem';\nexport default (function (forecast) {\n  var days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  var dailyForecasts = [];\n  dailyForecasts = forecast.map(function (dayInfo, index) {\n    var iconType = dayInfo.weather[0].main.toLowerCase();\n    return React.createElement(ForecastItem, {\n      key: index,\n      icon: \"wi-wu-\".concat(iconType),\n      high: Math.round(dayInfo.temp.max),\n      low: Math.round(dayInfo.temp.min),\n      dayOfWeek: days[(new Date().getDay() + index) % 7],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  });\n  return dailyForecasts;\n});","map":{"version":3,"sources":["/Users/marissasnihur/Desktop/weather-in-the-universe-marissasnihur/react-weather-app/src/containers/helpers/generateForecast.js"],"names":["React","ForecastItem","forecast","days","dailyForecasts","map","dayInfo","index","iconType","weather","main","toLowerCase","Math","round","temp","max","min","Date","getDay"],"mappings":";;AAAA;;;;;;;;;;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AAEA,gBAAe,UAACC,QAAD,EAAc;AAC3B,MAAMC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAb;AACA,MAAIC,cAAc,GAAG,EAArB;AAEAA,EAAAA,cAAc,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAChD,QAAMC,QAAQ,GAAGF,OAAO,CAACG,OAAR,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwBC,WAAxB,EAAjB;AACA,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEJ,KADP;AAEE,MAAA,IAAI,kBAAWC,QAAX,CAFN;AAGE,MAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,IAAR,CAAaC,GAAxB,CAHR;AAIE,MAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,IAAR,CAAaE,GAAxB,CAJP;AAKE,MAAA,SAAS,EAAEb,IAAI,CAAE,CAAC,IAAIc,IAAJ,GAAWC,MAAX,KAAsBX,KAAvB,IAAgC,CAAlC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAXgB,CAAjB;AAaA,SAAOH,cAAP;AACD,CAlBD","sourcesContent":["/*\nThis function is responsible for generating an array of <ForecastItem>(s) as well as the\ncorresponding label for each day of the week.\n\nIt will loop through the forecast array, create an instance of <ForecastItem> with the data as props,\nand then return it back to the caller. \n\nBecause the next day is always going to be different, we will do a simple math calculation to\ndetermine which day label we should start the forecast with. (eg: If today is Saturday, then the\nforecast should say: Sun Mon Tue Wed Thu).\n*/\n\n\nimport React from 'react';\n\nimport ForecastItem from '../../components/forecastItem/forecastItem';\n\nexport default (forecast) => {\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  let dailyForecasts = [];\n\n  dailyForecasts = forecast.map((dayInfo, index) => {\n    const iconType = dayInfo.weather[0].main.toLowerCase();\n    return (\n      <ForecastItem\n        key={index}\n        icon={`wi-wu-${iconType}`}\n        high={Math.round(dayInfo.temp.max)}\n        low={Math.round(dayInfo.temp.min)}\n        dayOfWeek={days[((new Date().getDay() + index) % 7)]}>\n      </ForecastItem>\n    );\n  });\n\n  return dailyForecasts;\n}"]},"metadata":{},"sourceType":"module"}